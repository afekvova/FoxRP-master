plugins {
    id 'java'
}

group = 'me.afek'
version = '2.0.0'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url = 'https://repo.papermc.io/repository/maven-public/' // Paper API
    }
    maven {
        url = 'https://oss.sonatype.org/content/groups/public/' // Paper API
    }
    maven {
        url = 'https://repo.essentialsx.net/snapshots/' // EssentialsX API
    }
    maven {
        url = 'https://repo.codemc.org/repository/maven-releases/' // SkinsRestorer API
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly 'net.essentialsx:EssentialsX:2.19.1-SNAPSHOT'
//    compileOnly 'net.skinsrestorer:skinsrestorer-api:14.2.1'
    implementation files('libs/SkinsRestorer.jar')

    implementation 'com.google.code.gson:gson:2.9.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
